{"version":3,"file":"js/app.1895eda8.js","mappings":"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","sources":["webpack://moebius-render/./src/App.vue","webpack://moebius-render/./src/components/MoebiusMaterial.js","webpack://moebius-render/./src/components/MobieusPass.js","webpack://moebius-render/./src/components/Moebius.vue","webpack://moebius-render/./src/components/Moebius.vue?5fc3","webpack://moebius-render/./src/App.vue?7ccd","webpack://moebius-render/./src/main.js","webpack://moebius-render/webpack/bootstrap","webpack://moebius-render/webpack/runtime/chunk loaded","webpack://moebius-render/webpack/runtime/compat get default export","webpack://moebius-render/webpack/runtime/define property getters","webpack://moebius-render/webpack/runtime/global","webpack://moebius-render/webpack/runtime/hasOwnProperty shorthand","webpack://moebius-render/webpack/runtime/jsonp chunk loading","webpack://moebius-render/webpack/startup"],"sourcesContent":["<template>\n  <Moebius/>\n</template>\n\n<script>\nimport Moebius from './components/Moebius.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    Moebius\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n  font-family: \"Courier New\", Courier, monospace;\n  font-size: 95%;\n  margin: 0; \n  height: 100%; \n  overflow: hidden\n\n}\n</style>\n","import * as THREE from 'three'\n\n\nconst vertexShader = `\n    varying vec2 vUv;\n    uniform vec2 uResolution;\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n`\n\nconst fragmentShader = `\n    uniform sampler2D tDiffuse;\n    uniform vec2 uResolution;\n    uniform sampler2D uNormals;\n    uniform float timerRandoms[32];\n\n    varying vec2 vUv;\n\n    float rand(vec2 co){\n        return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n    }\n\n    float randDispl(float xCoord, float yCoord, float resolutionX, float resolutionY, float factor, vec4 randVariables){\n        float randNum = rand(vec2(xCoord, yCoord));\n        float disp = ((1.0 + randNum) * (sin(yCoord*resolutionY / randVariables.x)) * factor + (1.0 + randNum) * (sin(yCoord*resolutionY / randVariables.y)) * factor  + (1.0 + randNum) * (sin(yCoord*resolutionY / randVariables.z)) * factor  + (1.0 + randNum) * (sin(yCoord*resolutionY / randVariables.w)) * factor) / 4.0;\n        return disp;\n    }\n\n    float valueAtPoint(sampler2D image, vec2 coord, vec2 texel, vec2 point) {\n        vec3 luma = vec3(0.299, 0.587, 0.114);\n        // here we have a rand so we have the pencil line effect\n        // 2.0*rand(coord)*\n        return dot(texture2D(image, coord + texel * point).xyz, luma);\n    }\n\n    float diffuseValue(float x, float y) {\n        return valueAtPoint(tDiffuse, vUv, vec2(1.0 / uResolution.x, 1.0 / uResolution.y), vec2(x, y)) * 0.6;\n    }\n    float normalValue(float x, float y) {\n        return valueAtPoint(uNormals, vUv, vec2(1.0 / uResolution.x, 1.0 / uResolution.y), vec2(x, y)) * 0.4;\n    }\n\n    float getValue(float x, float y) {\n        return diffuseValue(x, y) + normalValue(x, y);\n    }\n\n    float combinedSobelValue() {\n        // kernel definition (in glsl matrices are filled in column-major order)\n        const mat3 Gx = mat3(-1, -2, -1, 0, 0, 0, 1, 2, 1);// x direction kernel\n        const mat3 Gy = mat3(-1, 0, 1, -2, 0, 2, -1, 0, 1);// y direction kernel\n\n        // fetch the 3x3 neighbourhood of a fragment\n\n        // first column\n        float xDisp = randDispl(vUv.x, vUv.y, uResolution.x, uResolution.y, 1.5, vec4(22.0, 13.0, 37.0, 89.0));\n        float yDisp = randDispl(vUv.y, vUv.x, uResolution.y, uResolution.x, 1.5, vec4(22.0, 13.0, 37.0, 89.0));\n\n        float tx0y0 = getValue(-1.0+ xDisp, -1.0 + yDisp);\n        float tx0y1 = getValue(-1.0+ xDisp, 0.0 + yDisp);\n        float tx0y2 = getValue(-1.0+ xDisp, 1.0 + yDisp);\n\n        // second column\n        float tx1y0 = getValue(0.0+ xDisp, -1.0 + yDisp);\n        float tx1y1 = getValue(0.0+ xDisp, 0.0 + yDisp);\n        float tx1y2 = getValue(0.0+ xDisp, 1.0 + yDisp);\n\n        // third column\n        float tx2y0 = getValue(1.0+ xDisp, -1.0 + yDisp);\n        float tx2y1 = getValue(1.0+ xDisp, 0.0 + yDisp);\n        float tx2y2 = getValue(1.0+ xDisp, 1.0 + yDisp);\n\n        // gradient value in x direction\n        float valueGx = Gx[0][0] * tx0y0 + Gx[1][0] * tx1y0 + Gx[2][0] * tx2y0 +\n        Gx[0][1] * tx0y1 + Gx[1][1] * tx1y1 + Gx[2][1] * tx2y1 +\n        Gx[0][2] * tx0y2 + Gx[1][2] * tx1y2 + Gx[2][2] * tx2y2;\n\n        // gradient value in y direction\n        float valueGy = Gy[0][0] * tx0y0 + Gy[1][0] * tx1y0 + Gy[2][0] * tx2y0 +\n        Gy[0][1] * tx0y1 + Gy[1][1] * tx1y1 + Gy[2][1] * tx2y1 +\n        Gy[0][2] * tx0y2 + Gy[1][2] * tx1y2 + Gy[2][2] * tx2y2;\n\n        // magnitude of the total gradient\n        float G = (valueGx * valueGx) + (valueGy * valueGy);\n        return clamp(G, 0.0, 1.0);\n    }\n\n    float luma(vec4 color){\n        return 0.2126*color.x + 0.7152*color.y + 0.0722*color.z;\n    }\n    vec3 czm_saturation(vec3 rgb, float adjustment)\n    {\n        // Algorithm from Chapter 16 of OpenGL Shading Language\n        const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n        vec3 intensity = vec3(dot(rgb, W));\n        return mix(intensity, rgb, adjustment);\n    }\n\n\n\n    void main() {\n        float sobelValue = combinedSobelValue();\n        sobelValue = smoothstep(0.01, 0.03, sobelValue);\n\n        vec4 lineColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n        if (sobelValue > 0.1) {\n            gl_FragColor = lineColor;\n        } else {\n            vec4 normalColor = texture2D(uNormals, vUv);\n\n            // now we make the texture\n            if (normalColor.x > 2000.0 && normalColor.y > 2000.0 && normalColor.z > 2000.0){\n                gl_FragColor = vec4(240.0/255.0, 234.0/255.0, 214.0/255.0, 1.0);\n            }else if (normalColor.x > 100.0 && normalColor.y > 100.0 && normalColor.z > 100.0){\n                gl_FragColor = vec4(czm_saturation((texture2D(tDiffuse, vUv) * 0.5 + vec4(240.0/255.0, 234.0/255.0, 214.0/255.0, 1.0) * 0.5).xyz, 0.4), 1.0);\n            }else{\n                // we will also need to distort the texture a bit\n\n\n                float xDisps[5] = float[](randDispl(vUv.x, vUv.y, uResolution.x, uResolution.y, 1.5 / uResolution.x, vec4(22.0, 13.0, 37.0, 89.0)), randDispl(vUv.x, vUv.y, uResolution.x, uResolution.y, 1.5 / uResolution.x, vec4(timerRandoms[0], timerRandoms[1], timerRandoms[2], timerRandoms[3])), randDispl(vUv.x, vUv.y, uResolution.x, uResolution.y, 1.5 / uResolution.x, vec4(timerRandoms[4], timerRandoms[5], timerRandoms[6], timerRandoms[7])), randDispl(vUv.x, vUv.y, uResolution.x, uResolution.y, 1.5 / uResolution.x, vec4(timerRandoms[8], timerRandoms[9], timerRandoms[10], timerRandoms[11])), randDispl(vUv.x, vUv.y, uResolution.x, uResolution.y, 1.5 / uResolution.x, vec4(timerRandoms[12], timerRandoms[13], timerRandoms[14], timerRandoms[15])));\n\n                float yDisps[5] = float[](randDispl(vUv.y, vUv.x, uResolution.y, uResolution.x, 1.5 / uResolution.y, vec4(22.0, 13.0, 37.0, 89.0)), randDispl(vUv.y, vUv.x, uResolution.y, uResolution.x, 1.5 / uResolution.y, vec4(timerRandoms[16], timerRandoms[17], timerRandoms[18], timerRandoms[19])), randDispl(vUv.y, vUv.x, uResolution.y, uResolution.x, 1.5 / uResolution.y, vec4(timerRandoms[20], timerRandoms[21], timerRandoms[22], timerRandoms[23])), randDispl(vUv.y, vUv.x, uResolution.y, uResolution.x, 1.5 / uResolution.y, vec4(timerRandoms[24], timerRandoms[25], timerRandoms[26], timerRandoms[7])), randDispl(vUv.y, vUv.x, uResolution.y, uResolution.x, 1.5 / uResolution.y, vec4(timerRandoms[28], timerRandoms[29], timerRandoms[30], timerRandoms[31])));\n\n\n                vec2 vUvNew = vUv + vec2(xDisps[0], yDisps[0]);\n                gl_FragColor =  vec4(czm_saturation(texture2D(tDiffuse, vUvNew).xyz, 0.3), 1.0);\n\n                vec4 pixelColor = texture2D(tDiffuse, vUvNew);\n                float pixelLuma = luma(pixelColor);\n                if (pixelLuma <= 0.32){\n                    float stripe = mod((vUv.y * uResolution.y + vUv.x * uResolution.x) / 17.7, 4.0);\n                    if (stripe <= 1.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[1], yDisps[1]);\n                        if (mod(vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }else if (stripe <= 2.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[2], yDisps[2]);\n                        if (mod(vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                    else if (stripe <= 3.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[2], yDisps[2]);\n                        if (mod(vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                    else if (stripe <= 4.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[3], yDisps[3]);\n                        if (mod(vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                }\n                if (pixelLuma <= 0.48){\n                    float stripe = mod((vUv.y * uResolution.y + vUv.x * uResolution.x) / 17.7, 4.0);\n                    if (stripe <= 1.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[1], yDisps[1]);\n                        if (mod(vUvStripe.y * uResolution.y, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }else if (stripe <= 2.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[2], yDisps[2]);\n                        if (mod(vUvStripe.y * uResolution.y, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                    else if (stripe <= 3.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[2], yDisps[2]);\n                        if (mod(vUvStripe.y * uResolution.y, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                    else if (stripe <= 4.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[3], yDisps[3]);\n                        if (mod(vUvStripe.y * uResolution.y, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                }\n                if (pixelLuma <= 0.64){\n                    float stripe = mod((-vUv.y * uResolution.y + vUv.x * uResolution.x) / (17.7 + 5.0 * sin(-vUv.y * uResolution.y + vUv.x * uResolution.x)), 4.0);\n                    if (stripe <= 1.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[1], yDisps[1]);\n                        if (mod(-vUvStripe.y * uResolution.y + vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }else if (stripe <= 2.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[2], yDisps[2]);\n                        if (mod(-vUvStripe.y * uResolution.y + vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                    else if (stripe <= 3.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[2], yDisps[2]);\n                        if (mod(-vUvStripe.y * uResolution.y + vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                    else if (stripe <= 4.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[3], yDisps[3]);\n                        if (mod(-vUvStripe.y * uResolution.y + vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                }\n                if (pixelLuma <= 0.75){\n                    float stripe = mod((vUv.y * uResolution.y + vUv.x * uResolution.x) / (17.7 + 5.0 * sin(vUv.y * uResolution.y + vUv.x * uResolution.x)), 4.0);\n                    if (stripe <= 1.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[1], yDisps[1]);\n                        if (mod(vUvStripe.y * uResolution.y + vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }else if (stripe <= 2.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[2], yDisps[2]);\n                        if (mod(vUvStripe.y * uResolution.y + vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                    else if (stripe <= 3.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[2], yDisps[2]);\n                        if (mod(vUvStripe.y * uResolution.y + vUvStripe.x * uResolution.x, 17.7) <=1.5){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                    else if (stripe <= 4.0){\n                        vec2 vUvStripe = vUv + vec2(xDisps[3], yDisps[3]);\n                        if (mod(vUvStripe.y * uResolution.y + vUvStripe.x * uResolution.x, 17.7) <=1.){\n                            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n                        }\n                    }\n                }\n                if (pixelLuma > 0.75){\n                    gl_FragColor = vec4(czm_saturation((texture2D(tDiffuse, vUv) * 0.7 + vec4(240.0/255.0, 234.0/255.0, 214.0/255.0, 1.0) * 0.3).xyz, 0.4), 1.0);\n                }\n            }\n        }\n    }\n`\n\nexport class MoebiusMaterial extends THREE.ShaderMaterial {\n    constructor() {\n        super({\n            uniforms: {\n                tDiffuse: { value: null },\n                uNormals: { value: null },\n                timerRandoms: {value: []},\n                uResolution: {\n                    value: new THREE.Vector2(1, 1)\n                }\n            },\n            fragmentShader,\n            vertexShader\n        })\n    }\n}\n","import { Pass, FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass'\nimport { MoebiusMaterial } from './MoebiusMaterial'\nimport * as THREE from 'three'\n\nexport class PencilLinesPass extends Pass {\n    constructor(width, height, scene, camera) {\n        super()\n        this.scene = scene;\n        this.camera = camera;\n\n        this.material = new MoebiusMaterial();\n        this.randomNumbers = new Array(32);\n        for (var i = 0; i < 32; i++){\n            this.randomNumbers[i] = Math.random() * 90 + 7.0;\n        }\n        this.material.uniforms.timerRandoms.value = this.randomNumbers;\n        this.lastTime = Date.now();\n\n        this.fsQuad = new FullScreenQuad(this.material);\n        this.material.uniforms.uResolution.value = new THREE.Vector2(width, height);\n\n        // for normal buffer\n        const normalBuffer = new THREE.WebGLRenderTarget(width, height);\n\n        normalBuffer.texture.format = THREE.RGBAFormat;\n        normalBuffer.texture.type = THREE.HalfFloatType;\n        normalBuffer.texture.minFilter = THREE.NearestFilter;\n        normalBuffer.texture.magFilter = THREE.NearestFilter;\n        normalBuffer.texture.generateMipmaps = false;\n        normalBuffer.stencilBuffer = false;\n        this.normalBuffer = normalBuffer;\n\n        this.normalMaterial = new THREE.ShaderMaterial({\n            uniforms: {\n                lightPos: { value: new THREE.Vector3(0, 4.0, 0.0) },\n                cameraPos: {value: new THREE.Vector3(0, 0, 0)}\n            },\n            vertexShader: `\n            varying vec3 vNormal;\n            varying vec3 vWorldPosition;\n        \n            void main() {\n                vNormal = normalize(mat3(modelMatrix) * normal);\n                vWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\n                gl_Position = projectionMatrix * (modelViewMatrix * vec4(position, 1.0));\n            }\n            \n            `,\n            fragmentShader: `\n            uniform vec3 cameraPos;\n            uniform vec3 lightPos; // in world space\n        \n            varying vec3 vNormal;\n            varying vec3 vWorldPosition;\n        \n            void main() {\n                // Calculate view direction in world space\n                vec3 viewDir = normalize(cameraPos - vWorldPosition);\n        \n                // Specular term\n                vec3 lightDir = normalize(lightPos - vWorldPosition);\n                vec3 reflectDir = reflect(-lightDir, vNormal);\n                float spec = pow(max(dot(viewDir, reflectDir), 0.0), length(lightPos - vWorldPosition) * 4.0);\n                // gl_FragColor = vec4(spec, spec, spec, 1.0);\n\n                // diffuse term\n                float diff = max(dot(vNormal, lightDir), 0.0);\n                if (spec > 0.59){\n                    gl_FragColor = vec4(100000.0, 100000.0, 100000.0, 1.0);\n                }else if (diff > 0.95){\n                    gl_FragColor = vec4(2000.0, 2000.0, 2000.0, 1.0);\n                }else{\n                    gl_FragColor = vec4(vNormal, 1.0);\n                }\n                // gl_FragColor = vec4(viewDir, 1.0);\n            }\n            `\n        }\n        );\n    }\n\n    dispose() {\n        this.material.dispose();\n        this.fsQuad.dispose();\n    }\n\n    render(\n        renderer,\n        writeBuffer,\n        readBuffer\n    ) {\n\n        renderer.setRenderTarget(this.normalBuffer);\n        const overrideMaterialBefore = this.scene.overrideMaterial;\n\n        this.normalMaterial.uniforms.cameraPos.value = this.camera.position;\n        this.scene.overrideMaterial = this.normalMaterial;\n\n        renderer.render(this.scene, this.camera);\n        this.scene.overrideMaterial = overrideMaterialBefore;\n        this.material.uniforms.uNormals.value = this.normalBuffer.texture;\n        this.material.uniforms.tDiffuse.value = readBuffer.texture;\n\n        // check passed time\n        var currentTime = Date.now();\n        if (currentTime - this.lastTime > 1000){\n            for (var i = 0; i < 32; i++){\n                this.randomNumbers[i] = Math.random() * 40.0 + 7.0;\n            }\n            this.material.uniforms.timerRandoms.value = this.randomNumbers;\n            this.lastTime = Date.now();\n        }\n\n\n        if (this.renderToScreen) {\n            renderer.setRenderTarget(null);\n            this.fsQuad.render(renderer);\n        } else {\n            renderer.setRenderTarget(writeBuffer);\n            if (this.clear) renderer.clear();\n            this.fsQuad.render(renderer);\n        }\n    }\n    changeLight(lightPos) {\n        this.normalMaterial.uniforms.lightPos.value = lightPos;\n    }\n\n    // resize the canvas\n    resize(width, height) {\n        this.material.uniforms.uResolution.value = new THREE.Vector2(width, height);\n    }\n}\n","<template></template>\n  <script>\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\nimport { PencilLinesPass } from \"./MobieusPass.js\";\nimport { GammaCorrectionShader } from \"three/examples/jsm/shaders/GammaCorrectionShader.js\";\nimport { ShaderPass } from \"three/addons/postprocessing/ShaderPass.js\";\nimport { STLLoader } from \"three/examples/jsm/loaders/STLLoader\";\n\n// initialization of threejs stuffs\n// camera and scene\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(\n  60,\n  window.innerWidth / window.innerHeight,\n  0.1,\n  1000\n);\ncamera.position.z = 8;\ncamera.position.y = 0;\n// camera.position.x = 2;\n\n// geometry\nconst geometry = new THREE.TorusKnotGeometry(1, 0.4, 500, 32);\nconst material = new THREE.MeshStandardMaterial({\n  color: 0x00ff00,\n  emissive: 0x00ff00,\n  emissiveIntensity: 0.1,\n});\nconst torus = new THREE.Mesh(geometry, material);\ntorus.rotation.y = Math.PI;\ntorus.castShadow = true;\ntorus.position.set(-4, 0, 0);\nscene.add(torus);\n\nconst geometry1 = new THREE.DodecahedronGeometry(2, 0);\nconst material1 = new THREE.MeshStandardMaterial({\n  color: 0xfaaa0f,\n  emissive: 0xfaaa0f,\n  emissiveIntensity: 0.1,\n});\nconst dode = new THREE.Mesh(geometry1, material1);\ndode.rotation.y = Math.PI;\ndode.castShadow = true;\ndode.position.set(4, 0, 0);\nscene.add(dode);\n\n// floor\nconst plane0 = new THREE.Mesh(\n  new THREE.PlaneGeometry(18, 18),\n  new THREE.MeshStandardMaterial({\n    color: 0xffabcd,\n    emissive: 0xffabcd,\n    emissiveIntensity: 0.1,\n  })\n);\nplane0.position.z = -9;\nplane0.receiveShadow = true;\nplane0.material.side = THREE.DoubleSide;\nscene.add(plane0);\n\nconst plane1 = new THREE.Mesh(\n  new THREE.PlaneGeometry(18, 18),\n  new THREE.MeshStandardMaterial({\n    color: 0xabcdff,\n    emissive: 0xabcdff,\n    emissiveIntensity: 0.1,\n  })\n);\nplane1.rotation.y = Math.PI / 2;\nplane1.position.x = -9;\nplane1.receiveShadow = true;\nplane1.material.side = THREE.DoubleSide;\nscene.add(plane1);\n\nconst plane2 = new THREE.Mesh(\n  new THREE.PlaneGeometry(18, 18),\n  new THREE.MeshStandardMaterial({\n    color: 0xabffcd,\n    emissive: 0xabffcd,\n    emissiveIntensity: 0.1,\n  })\n);\nplane2.rotation.y = -Math.PI / 2;\nplane2.position.x = 9;\nplane2.receiveShadow = true;\nplane2.material.side = THREE.DoubleSide;\nscene.add(plane2);\n\nconst plane3 = new THREE.Mesh(\n  new THREE.PlaneGeometry(18, 18),\n  new THREE.MeshStandardMaterial({\n    color: 0xbcfafd,\n    emissive: 0xbcfafd,\n    emissiveIntensity: 0.6,\n  })\n);\nplane3.rotation.x = Math.PI / 2;\nplane3.position.y = 9;\nplane3.receiveShadow = true;\nplane3.material.side = THREE.DoubleSide;\nscene.add(plane3);\n\nconst plane4 = new THREE.Mesh(\n  new THREE.PlaneGeometry(18, 18),\n  new THREE.MeshStandardMaterial({\n    color: 0xfabcdf,\n    emissive: 0xfabcdf,\n    emissiveIntensity: 0.6,\n  })\n);\nplane4.rotation.x = -Math.PI / 2;\nplane4.position.y = -9;\nplane4.receiveShadow = true;\nplane4.material.side = THREE.DoubleSide;\nscene.add(plane4);\n\nconst loader = new STLLoader();\nloader.load(\n  \"Fennec_Fox.stl\",\n  function (geometry) {\n    const mesh = new THREE.Mesh(\n      geometry,\n      new THREE.MeshStandardMaterial({\n        color: 0x00faca,\n        emissive: 0x00faca,\n        emissiveIntensity: 0.0,\n      })\n    );\n    mesh.scale.set(0.07, 0.07, 0.07);\n    mesh.rotation.x = -Math.PI / 2;\n    mesh.geometry.center();\n    mesh.castShadow = true;\n    scene.add(mesh);\n  },\n  (xhr) => {\n    console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n  },\n  (error) => {\n    console.log(error);\n  }\n);\n\n// lighting\nconst directionalLight = new THREE.PointLight(0xf0ead6, 800);\ndirectionalLight.castShadow = true;\ndirectionalLight.position.set(0, 4, 0);\ndirectionalLight.shadow.mapSize.width = 2048;\ndirectionalLight.shadow.mapSize.height = 2048;\nscene.add(directionalLight);\n\n// renderer\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setClearColor(\"#eee\");\nrenderer.physicallyCorrectLights = true;\nrenderer.outputEncoding = THREE.sRGBEncoding;\nrenderer.toneMapping = THREE.CineonToneMapping;\nrenderer.toneMappingExposure = 1.75;\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\nrenderer.setClearColor(0xa1b3f0, 1);\ndocument.body.appendChild(renderer.domElement);\n\n// composers\nconst composer = new EffectComposer(renderer);\nconst renderPass = new RenderPass(scene, camera);\nconst pencilLinePass = new PencilLinesPass(\n  renderer.domElement.clientWidth,\n  renderer.domElement.clientHeight,\n  scene,\n  camera\n);\n\nconst gammaCorrectionPass = new ShaderPass(GammaCorrectionShader);\n\ncomposer.addPass(renderPass);\ncomposer.addPass(gammaCorrectionPass);\ncomposer.addPass(pencilLinePass);\n\n// control\nconst controls = new OrbitControls(camera, renderer.domElement);\ncontrols.addEventListener(\"change\", (event) => {\n  var newLight = new THREE.Vector3(\n    controls.object.position.x + 0,\n    controls.object.position.y * 1.5 + 4,\n    controls.object.position.z + 8\n  );\n  directionalLight.position.set(newLight.x, newLight.y, newLight.z);\n  pencilLinePass.changeLight(newLight);\n});\n\ncontrols.autoRotate = true;\n\n// for animation\nfunction animate() {\n  requestAnimationFrame(animate);\n  torus.rotation.y += 0.013 + 0.002 * Math.random();\n  torus.rotation.x += 0.007 + 0.008 * Math.random();\n  torus.rotation.z += 0.009 + 0.006 * Math.random();\n\n  dode.rotation.x += (0.006 + 0.004 * Math.random()) / 2.0;\n  dode.rotation.z -= (0.003 + 0.007 * Math.random()) / 2.0;\n  dode.rotation.y -= (0.008 + 0.002 * Math.random()) / 2.0;\n  controls.update();\n  composer.render();\n}\n\nanimate();\n\nexport default {\n  name: \"Moebius\",\n  data() {\n    return {};\n  },\n  computed: {},\n  methods: {\n    onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      pencilLinePass.resize(\n        renderer.domElement.clientWidth,\n        renderer.domElement.clientHeight\n      );\n    },\n  },\n\n  async mounted() {\n    window.addEventListener(\"resize\", this.onWindowResize);\n    pencilLinePass.resize(\n      renderer.domElement.clientWidth,\n      renderer.domElement.clientHeight\n    );\n    // change light position\n    var newLight = new THREE.Vector3(\n      controls.object.position.x + 0,\n      controls.object.position.y * 1.5 + 4,\n      controls.object.position.z + 8\n    );\n    directionalLight.position.set(newLight.x, newLight.y, newLight.z);\n    pencilLinePass.changeLight(newLight);\n\n    window.addEventListener(\"keypress\", (event)=>{\n      if (event.key == \" \"){\n        controls.autoRotate = !controls.autoRotate;\n      }\n    })\n  },\n};\n</script>\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped>\n.canvWrapper {\n  height: 100vh;\n  width: 100vw;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n\n.loading {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-size: 20px;\n  z-index: 100;\n  -webkit-user-select: none;\n  /* Safari */\n  -ms-user-select: none;\n  /* IE 10 and IE 11 */\n  user-select: none;\n  /* Standard syntax */\n  font-weight: bold;\n}\n\n.createdBy {\n  position: absolute;\n  bottom: 2px;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-size: 10px;\n  z-index: 100;\n  -webkit-user-select: none;\n  /* Safari */\n  -ms-user-select: none;\n  /* IE 10 and IE 11 */\n  user-select: none;\n  /* Standard syntax */\n  font-weight: bold;\n}\n</style>","import { render } from \"./Moebius.vue?vue&type=template&id=39ac2a22&scoped=true\"\nimport script from \"./Moebius.vue?vue&type=script&lang=js\"\nexport * from \"./Moebius.vue?vue&type=script&lang=js\"\n\nimport \"./Moebius.vue?vue&type=style&index=0&id=39ac2a22&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-39ac2a22\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=58d2a5fc\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=58d2a5fc&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmoebius_render\"] = self[\"webpackChunkmoebius_render\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9763); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_Moebius","vertexShader","fragmentShader","MoebiusMaterial","THREE","constructor","super","uniforms","tDiffuse","value","uNormals","timerRandoms","uResolution","PencilLinesPass","Pass","width","height","scene","camera","this","material","randomNumbers","Array","i","Math","random","lastTime","Date","now","fsQuad","FullScreenQuad","normalBuffer","texture","format","type","minFilter","magFilter","generateMipmaps","stencilBuffer","normalMaterial","lightPos","cameraPos","dispose","render","renderer","writeBuffer","readBuffer","setRenderTarget","overrideMaterialBefore","overrideMaterial","position","currentTime","renderToScreen","clear","changeLight","resize","window","innerWidth","innerHeight","z","y","geometry","color","emissive","emissiveIntensity","torus","rotation","PI","castShadow","set","add","geometry1","material1","dode","plane0","receiveShadow","side","plane1","x","plane2","plane3","plane4","loader","STLLoader","load","mesh","scale","center","xhr","console","log","loaded","total","error","directionalLight","shadow","mapSize","antialias","setSize","setClearColor","physicallyCorrectLights","outputEncoding","toneMapping","toneMappingExposure","shadowMap","enabled","document","body","appendChild","domElement","composer","EffectComposer","renderPass","RenderPass","pencilLinePass","clientWidth","clientHeight","gammaCorrectionPass","ShaderPass","GammaCorrectionShader","addPass","controls","OrbitControls","animate","requestAnimationFrame","update","addEventListener","event","newLight","object","autoRotate","name","data","computed","methods","onWindowResize","aspect","updateProjectionMatrix","mounted","key","__exports__","components","Moebius","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","length","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}